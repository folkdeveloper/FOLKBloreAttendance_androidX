package in.folknet.folkbloreattendance;import android.app.ProgressDialog;import android.content.Intent;import android.content.pm.PackageManager;import android.os.Bundle;import android.os.Handler;import android.util.Log;import android.view.Gravity;import android.view.View;import android.widget.AdapterView;import android.widget.Button;import android.widget.EditText;import android.widget.RadioButton;import android.widget.RadioGroup;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.ActivityCompat;import androidx.core.content.ContextCompat;import com.android.volley.AuthFailureError;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.JsonObjectRequest;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import com.google.firebase.database.DatabaseReference;import org.json.JSONException;import org.json.JSONObject;import java.io.UnsupportedEncodingException;import java.util.Calendar;//import com.google.firebase.database.DataSnapshot;//import com.google.firebase.database.DatabaseError;//import com.google.firebase.database.DatabaseReference;//import com.google.firebase.database.FirebaseDatabase;//import com.google.firebase.database.ValueEventListener;public class FOLK extends AppCompatActivity {//    String     Button scanbtn;    String co,year_fb;    private RequestQueue requestQueue;    String  time, venue, colour, zzone, session, category, program, fid, zoneRec, programRec, categoryRec, locationRec, sessionRec;    TextView result;    public static final int REQUEST_CODE = 100;    public static final int PERMISSION_REQUEST = 200;    private RadioGroup radioSexGroup;    private RadioButton radioSexButton;    RequestQueue rq;    int flag = 0;    Button btn;    EditText ename,eid, jp;    DatabaseReference database,mid,mfg,mcount,mChack,mfl, mmob;    String val,fin;    ProgressDialog pd;    String id,name,fg, mjp, sarea, fl, mob;    Spinner spinner_area, spinner_read ;    String selectedItemText, selectedItemTextread;    RadioGroup rg;    TextView txt;    int i;    String ws;    RadioButton rb;    String url1 = "https://us-central1-folk-database.cloudfunctions.net/Basic-Info-Exist-Based-On-FOLK-ID?folk_id=";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_folk);        zoneRec = getIntent().getStringExtra("Zone");        programRec = getIntent().getStringExtra("Program");        categoryRec = getIntent().getStringExtra("Category");        locationRec = getIntent().getStringExtra("Location");        sessionRec = getIntent().getStringExtra("Session");//        Toast.makeText(this, "Zone: " + zoneRec + "\nProgram: " + programRec + "\nCategory: " + categoryRec + "\nLocation: " + locationRec + "\nSession: " + sessionRec, Toast.LENGTH_SHORT).show();//        Toast.makeText(this, "-"+locationRec.length()+"-", Toast.LENGTH_SHORT).show();        jp = (EditText)findViewById(R.id.etjp);        btn = (Button) findViewById(R.id.btn);        rq = Volley.newRequestQueue(this);        spinner_area = (Spinner) findViewById(R.id.spinner_area);        spinner_read = (Spinner) findViewById(R.id.spinner_read);        Log.d("TAG", "onClick: "+ locationRec);//        rg = (RadioGroup)findViewById(R.id.radioGroup);        eid = (EditText)findViewById(R.id.et);        if(ContextCompat.checkSelfPermission(this, android.Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED){            ActivityCompat.requestPermissions(this, new String[]{android.Manifest.permission.CAMERA}, PERMISSION_REQUEST);        }        spinner_area.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long lid) {                selectedItemText = spinner_area.getItemAtPosition(position).toString();                // Notify the selected item text//                Toast.makeText(getApplicationContext(), "Selected : " + selectedItemText, Toast.LENGTH_SHORT).show();            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        spinner_read.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> parent, View view, int position, long lid) {                selectedItemTextread = spinner_read.getItemAtPosition(position).toString();                // Notify the selected item text//                Toast.makeText(getApplicationContext(), "Selected : " + selectedItemTextread, Toast.LENGTH_SHORT).show();            }            @Override            public void onNothingSelected(AdapterView<?> parent) {            }        });        btn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v)            {                id = eid.getText().toString();                mjp = jp.getText().toString();                Log.d("FOLK", "onClick: Out");                if ((id.length() < 11 && id.length() > 6 ) || (id.length() < 6)){                    Toast.makeText(getApplicationContext(), "Enter Full FOLK ID! " + id.length(), Toast.LENGTH_SHORT).show();                }else if(mjp.isEmpty()){                    Toast.makeText(getApplicationContext(), "You have not entered Japa Rounds!", Toast.LENGTH_SHORT).show();                }else if(selectedItemText.equals("Not Selected")){                    Toast.makeText(getApplicationContext(), "You have not selected any Area near to your Residence!", Toast.LENGTH_SHORT).show();                }                else if(selectedItemTextread.equals("Not Selected")){                    Toast.makeText(getApplicationContext(), "You have not entered Reading Mins!", Toast.LENGTH_SHORT).show();                }                else                {                    Log.d("FOLK", "onClick: In");                        pd = new ProgressDialog(FOLK.this);                        pd.setTitle("Please Wait...");                        pd.setMessage("Fetching Data from Database.");                        pd.show();                        pd.setCancelable(true);                        val = "";                    zzone = zoneRec;                    session = sessionRec;                    category = categoryRec;                    program = programRec;                    String data = "{"+                            "\"area\"" + " : " + "\"" + selectedItemText.toString() + "\","+                            "\"fid\"" + " : "+ "\"" + eid.getText().toString() + "\","+                            "\"japa\"" + " : "+ "\"" + jp.getText().toString() + "\","+                            "\"program\"" + " : "+ "\"" + program.toString() + "\","+                            "\"category\"" + " : "+ "\"" + category.toString() + "\","+                            "\"program_location\"" + " : "+ "\"" + locationRec.toString() + "\","+                            "\"zread\"" + " : "+ "\"" + selectedItemTextread.toString() + "\","+                            "\"zzone\"" + " : "+ "\"" + zzone.toString() + "\","+                            "\"session\"" + " : "+ "\"" + session.toString() +"\""+                            "}";                    Log.d("Main Activity", "onClick: " + data.toString());                    Submit(data);//                    sendJsonRequest(id);                    }                }        });    }    String color(){        String col = null;        Calendar calendar = Calendar.getInstance();        int hours = calendar.get(Calendar.HOUR_OF_DAY);        int minutes = calendar.get(Calendar.MINUTE);        int seconds = calendar.get(Calendar.SECOND);        if ((hours == 15) || (hours == 16 && minutes <= 40)){            col = "GREEN";        }        else if ((hours == 16 && minutes > 40) && (hours == 16 && minutes <= 50)){            col = "PINK";        }        else if ((hours == 16 && minutes > 50) && (hours == 16 && minutes <= 59)){            col = "YELLOW";        }        else {            col = "WHITE";        }        return col;    }    String time(){        String co = null;        Calendar calendar = Calendar.getInstance();        int hours = calendar.get(Calendar.HOUR_OF_DAY);        int minutes = calendar.get(Calendar.MINUTE);        int seconds = calendar.get(Calendar.SECOND);        if ((hours == 15) || (hours == 16 && minutes <= 40)){            co = "1";        }        else if ((hours == 16 && minutes > 40) && (hours == 16 && minutes <= 50)){            co = "2";        }        else if ((hours == 16 && minutes > 50) && (hours == 16 && minutes <= 59)){            co = "3";        }        else {            co = "4";        }        return co;    }    String sort(String fguide){        String Num;        String temp = null;        switch(fguide){            case "ANBD" :                Num = "1";                break;            case "ATSD" :                Num = "20";                break;            case "CTCD" :                Num = "2";                break;            case "HMCD" :                Num = "3";                break;            case "INPD" :                Num = "4";                break;            case "JVMD" :                Num = "5";                break;            case "KKSD" :                Num = "6";                break;            case "KMPD" :                Num = "7";                break;            case "LMND" :                Num = "8";                break;            case "RMRD" :                Num = "9";                break;            case "SRID" :                Num = "10";                break;            case "SRRD" :                Num = "11";                break;            case "VGND" :                Num = "12";                break;            case "VJGD" :                Num = "13";                break;            case "VNTD" :                Num = "14";                break;            case "KRMD" :                Num = "16";                break;            case "KBRD" :                Num = "9";                break;            case "HVGD" :                Num = "17";                break;            case "SGVD" :                Num = "21";                break;            case "SUVD" :                Num = "22";                break;            case "SKRD" :                Num = "23";                break;            default:                Num = "15";                break;        }        return Num;    }    int year(String id){        char a = id.charAt(2);        char b = id.charAt(3);        String temp = String.valueOf(a);        String temp2 = String.valueOf(b);        temp = temp.concat(temp2);        int result = Integer.parseInt(temp);//        Toast.makeText(getApplicationContext(), result , Toast.LENGTH_SHORT).show();        return result;    }    String venue(String fguide){        String Num;        switch(fguide){            case "ANBD" :                Num = "FOLK seminar hall";                break;            case "ATSD" :                Num = "Srila Prabhupada's office";                break;            case "HVGD" :                Num = "Two floor above main temple, room no.3";                break;            case "CTCD" :                Num = "One floor above main temple, room no.1";                break;            case "HMCD" :                Num = "English lecture hall";                break;            case "INPD" :                Num = "Samskara hall";                break;            case "JVMD" :                Num = "Gita counter cabin";                break;            case "KKSD" :                Num = "MTH";                break;            case "KMPD" :                Num = "One floor above main temple, room no.3";                break;            case "LMND" :                Num = "1 floor above main temple, room no.4";                break;            case "RMRD" :                Num = "14 mtrs west";                break;            case "SRID" :                Num = "cabin";                break;            case "SRRD" :                Num = "2 floor above main temple, room no.2";                break;            case "VGND" :                Num = "MVT";                break;            case "VJGD" :                Num = "Cabin";                break;            case "VNTD" :                Num = "14 mtrs north";                break;            case "KRMD" :                Num = "2 floor above main temple, room no.1";                break;            case "KBRD" :                Num = "1 floor above main temple, room no.2";                break;            case "SUVD" :                Num = "AV hall";                break;            case "SKRD" :                Num = "2 floor above main temple, room no.1";                break;            case "SGVD" :                Num = "English lecture hall";                break;            case "MHCD" :                Num = "14 mtrs south west";                break;            default:                Num = "";                break;        }        return Num;    }    public void sendJsonRequest(String folk_id) {        String url = url1.concat(folk_id);        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {            @Override            public void onResponse(JSONObject response) {                try {                    id = response.getString("folk_id");                    name = response.getString("Name");                    fg = response.getString("FOLK_GUIDE");                    fl = response.getString("folk_level");                    mob = response.getString("mobile");//                    Toast.makeText(getApplicationContext(), id + mob , Toast.LENGTH_LONG).show();                } catch (JSONException e) {                    e.printStackTrace();                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {            }        });        rq.add(jsonObjectRequest);        if (fg == null || id == null || name == null) {            Toast.makeText(getApplicationContext(), "Try Again!", Toast.LENGTH_SHORT).show();            pd.hide();        } else{            Calendar calendar = Calendar.getInstance();            int hours = calendar.get(Calendar.HOUR_OF_DAY);            int minutes = calendar.get(Calendar.MINUTE);            int date = calendar.get(Calendar.DAY_OF_MONTH);            int month = calendar.get(Calendar.MONTH);            int year = calendar.get(Calendar.YEAR);            month = month +1;            String time = date + "/" + month + "/" + year + "|"+hours+":"+minutes;            String c = color();            String WOS = null;            int d = year(id);            if (d == 17){                year_fb = "2";            }            else if(d == 18){                year_fb = "3";            }            else{                year_fb = "1";            }            Toast.makeText(getApplicationContext(),  year_fb, Toast.LENGTH_SHORT).show();            String Venuee = venue(fg);            fin = "    FOLK BANGALORE\n **********************\nName : " + name + "\nFOLK ID : " + id + "\nFOLK Guide : " + fg + "\nTIME : "+date+"/"+ month+"|"+ hours + ":" + minutes+ "\nFOLK Level : "+fl + "\nMeeting : "+Venuee + "\nCOUPON COLOR : "+c+"\n **********************\n\n\n\n.";            Intent intent = new Intent(FOLK.this, MainActivity.class);            intent.putExtra("message", fin);            intent.putExtra("name",name);            intent.putExtra("mjp",mjp);            intent.putExtra("fg",fg);            intent.putExtra("fl",fl);            intent.putExtra("mob",mob);            intent.putExtra("time",time);            intent.putExtra("fid",id);            intent.putExtra("ws","Workshop");            intent.putExtra("counter",i);            intent.putExtra("year_fb",year_fb);            intent.putExtra("selected_area", selectedItemText);            intent.putExtra("selected_read", selectedItemTextread);            String a,b;            a = time();            b = sort(fg);            intent.putExtra("timeNumber",a);            intent.putExtra("fgNumber",b);            eid.setText("");            jp.setText("");            pd.hide();            startActivity(intent);        }    }    private void Submit(String data)    {        pd = new ProgressDialog(FOLK.this);        pd.setTitle("Please Wait...");        pd.setMessage("Fetching Data from Database.");        pd.show();        pd.setCancelable(true);        final String savedata= data;        String URL="https://us-central1-folk-demo.cloudfunctions.net/createAttendanceDoc";        requestQueue = Volley.newRequestQueue(getApplicationContext());        StringRequest stringRequest = new StringRequest(Request.Method.POST, URL, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                try {                    JSONObject objres=new JSONObject(response);//                    Toast.makeText(FOLK.this, "Please Submit Now", Toast.LENGTH_SHORT).show();////                    Toast toast = Toast.makeText(getApplicationContext(),"Please Submit Now", Toast.LENGTH_SHORT);//                    toast.setGravity(Gravity.CENTER, 0, 0);//                    toast.show();//                    Toast.makeText(getApplicationContext(),objres.toString(),Toast.LENGTH_LONG).show();                    new Handler().postDelayed(new Runnable() {                        @Override                        public void run() {                            btn.performClick();                        }                    }, 0000);                    fid = objres.getString("folk_id");                    name = objres.getString("name");                    fg = objres.getString("fg");                    fl = objres.getString("folk_level");                    colour = objres.getString("colour");                    venue = objres.getString("meetup");//                    post_res_state = objres("status");                    time = objres.getString("time");                } catch (JSONException e) {                    Toast.makeText(getApplicationContext(),"Server Error",Toast.LENGTH_LONG).show();                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Toast.makeText(getApplicationContext(), "Check the FOLK ID \nAnd try again...", Toast.LENGTH_SHORT).show();                //Log.v("VOLLEY", error.toString());            }        }) {            @Override            public String getBodyContentType() {                return "application/json; charset=utf-8";            }            @Override            public byte[] getBody() throws AuthFailureError {                try {                    return savedata == null ? null : savedata.getBytes("utf-8");                } catch (UnsupportedEncodingException uee) {                    //Log.v("Unsupported Encoding while trying to get the bytes", data);                    return null;                }            }        };        Log.d("Check", "Submit: " + stringRequest.toString());        requestQueue.add(stringRequest);        pd.hide();        Log.d("Check", "Checking");        if ( name == null) {//            Toast.makeText(getApplicationContext(), "Kindly wait... \nFetching details from DB", Toast.LENGTH_SHORT).show();////            Toast toast = Toast.makeText(getApplicationContext(),"Kindly wait... \nFetching details from DB", Toast.LENGTH_LONG);//            toast.setGravity(Gravity.CENTER, 0, 0);//            toast.show();            Log.d("Check", "name is" + name);            pd.hide();        } else{            fin = "\n **********************\n" + "     FOLK BANGALORE \n  Attendance Slip v2.0 "+"\n  "+ time +"\n**********************\nName : " + name + "\nFOLK ID : " + fid + "\nFOLK Guide : " + fg + "\nLevel : "+fl + "\nMeeting : "+ venue + "\nCOUPON COLOR : "+colour+"\n **********************\n\n\n\n.";            Intent intent = new Intent(FOLK.this, MainActivity.class);            intent.putExtra("message", fin);            intent.putExtra("name",name);            intent.putExtra("mjp",mjp);            intent.putExtra("fg",fg);            intent.putExtra("fl",fl);            intent.putExtra("mob",mob);            intent.putExtra("time",time);            intent.putExtra("fid",fid);            intent.putExtra("ws","Workshop");//            intent.putExtra("counter",i);            intent.putExtra("selected_area", selectedItemText);            intent.putExtra("selected_read", selectedItemTextread);            eid.setText("");            jp.setText("");            pd.hide();            Log.d("Check", "Calling Main activity");            startActivity(intent);        }    }}